"use strict";(self.webpackChunkmodelstar_docs=self.webpackChunkmodelstar_docs||[]).push([[16],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(a),c=r,f=m["".concat(o,".").concat(c)]||m[c]||u[c]||i;return a?n.createElement(f,l(l({ref:t},d),{},{components:a})):n.createElement(f,l({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2899:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>p,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const i=a.p+"assets/images/forecast-dashboard-3a63ad8338653f7a6541829e8b2f5906.png",l=a.p+"assets/images/time-series-sample-data-e8aac48935ff79c37c66a67d2917342c.png",s={},o="univariant_time_series_forecast",p={unversionedId:"api/ml-sql-functions/univariate-time-series-forecast/index",id:"api/ml-sql-functions/univariate-time-series-forecast/index",title:"univariant_time_series_forecast",description:"Tutorial and use case",source:"@site/docs/api/ml-sql-functions/univariate-time-series-forecast/index.md",sourceDirName:"api/ml-sql-functions/univariate-time-series-forecast",slug:"/api/ml-sql-functions/univariate-time-series-forecast/",permalink:"/docs/api/ml-sql-functions/univariate-time-series-forecast/",draft:!1,editUrl:"https://github.com/modelstar-labs/docs/docs/api/ml-sql-functions/univariate-time-series-forecast/index.md",tags:[],version:"current",lastUpdatedAt:1668186583,formattedLastUpdatedAt:"Nov 11, 2022",frontMatter:{},sidebar:"docs",previous:{title:"ML functions for SQL",permalink:"/docs/api/ml-sql-functions/"}},d={},u=[{value:"Tutorial and use case",id:"tutorial-and-use-case",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<strong>Available <code>&lt;period_unit&gt;</code> aliases and descriptions:</strong>",id:"available-period_unit-aliases-and-descriptions",level:4},{value:"Example",id:"example",level:2},{value:"SQL statement",id:"sql-statement",level:3},{value:"Description",id:"description",level:3},{value:"Result",id:"result",level:3},{value:"Prerequisite",id:"prerequisite",level:2},{value:"Input data format",id:"input-data-format",level:3}],m={toc:u};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"univariant_time_series_forecast"},"univariant_time_series_forecast"),(0,r.kt)("h2",{id:"tutorial-and-use-case"},"Tutorial and use case"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/tutorials/sales-forecasting-inside-snowflake/"},"Sales Forecasting with 1 Line of SQL"))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"univariant_time_series_forecast(<table_name>, <time_column_name>,\n                                    <value_column_name>, <forecast_period>,\n                                    <period_unit>)\n")),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"<table_name>")," (string) - the data table's name."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"<time_column_name>")," (string) - the name of a timestamp column in the datatable."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"<value_column_name>")," (string) - the name of a value column to be forecasted."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"<forecast_period>")," (integer) - forecast period."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"<period_unit>")," (string) - unit alias of the period."),(0,r.kt)("h4",{id:"available-period_unit-aliases-and-descriptions"},(0,r.kt)("strong",{parentName:"h4"},"Available ",(0,r.kt)("inlineCode",{parentName:"strong"},"<period_unit>")," aliases and descriptions:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Alias string"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'B'"),(0,r.kt)("td",{parentName:"tr",align:null},"business day")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'D'"),(0,r.kt)("td",{parentName:"tr",align:null},"calendar day")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'W'"),(0,r.kt)("td",{parentName:"tr",align:null},"week")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'M'"),(0,r.kt)("td",{parentName:"tr",align:null},"month")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'Q'"),(0,r.kt)("td",{parentName:"tr",align:null},"quarter")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'Y'"),(0,r.kt)("td",{parentName:"tr",align:null},"year")))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check out the Input data prerequisite for this ",(0,r.kt)("a",{parentName:"p",href:"#input-data-format"},"here"))),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("h3",{id:"sql-statement"},"SQL statement"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CALL univariant_time_series_forecast('SALES_TABLE', 'SALES_DATE', 'TOTAL_SALES', 24, 'M');\n")),(0,r.kt)("h3",{id:"description"},"Description"),(0,r.kt)("p",null,"Based on historical ",(0,r.kt)("inlineCode",{parentName:"p"},"SALES_DATE")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"TOTAL_SALES")," data in ",(0,r.kt)("inlineCode",{parentName:"p"},"SALES_TABLE"),", forecast the ",(0,r.kt)("inlineCode",{parentName:"p"},"TOTAL_SALES")," value for the next ",(0,r.kt)("inlineCode",{parentName:"p"},"24")," ",(0,r.kt)("inlineCode",{parentName:"p"},"M")," (months)."),(0,r.kt)("h3",{id:"result"},"Result"),(0,r.kt)("p",null,"All historical and forecasted data is materilized as a new table."),(0,r.kt)("p",null,"A forecast dashboard is auto-generated for checking modeling accuracy, discovered trends, and predictions."),(0,r.kt)("img",{src:i,width:"400"}),(0,r.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,r.kt)("h3",{id:"input-data-format"},"Input data format"),(0,r.kt)("p",null,"Input data is a univariant time series data: a sequence of integer or float data points indexed in timestamp. The table to be used should include in the following two columns:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A Time stamp column. Data type: ",(0,r.kt)("inlineCode",{parentName:"li"},"Date & Time Data Types"),"."),(0,r.kt)("li",{parentName:"ul"},"A value column. Data type: ",(0,r.kt)("inlineCode",{parentName:"li"},"Fixed-point Number")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"Floating-point Number"),".")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Extended reading. Snowflake docs about:\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.snowflake.com/en/sql-reference/data-types-numeric.html"},"Date & Time data types"),";\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.snowflake.com/en/sql-reference/data-types-numeric.html"},"Numeric data types"),".")),(0,r.kt)("p",null,"Sample dataset:"),(0,r.kt)("img",{src:l,width:"300"}))}c.isMDXComponent=!0}}]);